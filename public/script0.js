!function(){"use strict";(t=>{const{screen:{width:e,height:a},navigator:{language:n},location:r,document:s,history:i}=t,{hostname:o,href:c}=r,{currentScript:u,referrer:l}=s;if(!u)return;const h="data-",d=u.getAttribute.bind(u),f=d(h+"website-id"),p=d(h+"host-url"),m=d(h+"tag"),g="true"===d(h+"exclude-search");d(h+"domains");const y=`${(p||""||u.src.split("/").slice(0,-1).join("/")).replace(/\/$/,"")}/api/send`,b=`${e}x${a}`,v=/data-umamistats-event-([\w-_]+)/,w=h+"umamistats-event",S=300,T=t=>{if(t)return encodeURI(t)},N=t=>{try{const{pathname:e,search:a}=new URL(t);t=e+a}catch(t){}return g?t.split("?")[0]:t},x=()=>({website:f,hostname:o,screen:b,language:n,title:T(H),url:T(E),referrer:T(L),tag:m||void 0}),O=(t,e,a)=>{a&&(L=E,E=N(a.toString()),E!==L&&setTimeout(q,S))},R=(t,e="event")=>{const a={"Content-Type":"application/json"};void 0!==A&&(a["x-umamistats-cache"]=A);const n=JSON.stringify({type:e,payload:t});return"function"==typeof fetch?fetch(y,{method:"POST",body:n,headers:a}).then((t=>t.text())).then((t=>(A=t,t))).catch((t=>{})):new Promise(((t,e)=>{const a=new XMLHttpRequest;a.open("POST",y,!0),a.setRequestHeader("Content-Type","application/json"),void 0!==A&&a.setRequestHeader("x-umamistats-cache",A),a.onreadystatechange=()=>{if(a.readyState===XMLHttpRequest.DONE)if(a.status>=200&&a.status<300){const e=a.responseText;A=e,t(e)}else e(new Error("Request failed with status "+a.status))},a.send(n)}))},q=(t,e)=>R("string"==typeof t?{...x(),name:t,data:"object"==typeof e?e:void 0}:"object"==typeof t?t:"function"==typeof t?t(x()):x());t.umamistats||(t.umamistats={track:q});let A,j,E=N(c),L=l!==o?l:"",H=s.title;j||(q(),(()=>{const t=(t,e,a)=>{const n=t[e];return(...e)=>(a.apply(null,e),n.apply(t,e))};i.pushState=t(i,"pushState",O),i.replaceState=t(i,"replaceState",O)})(),(()=>{const t=new MutationObserver((([t])=>{H=t&&t.target?t.target.text:void 0})),e=s.querySelector("head > title");e&&t.observe(e,{subtree:!0,characterData:!0,childList:!0})})(),s.addEventListener("click",(async t=>{const e=t=>["BUTTON","A"].includes(t),a=async t=>{const e=t.getAttribute.bind(t),a=e(w);if(a){const n={};return t.getAttributeNames().forEach((t=>{const a=t.match(v);a&&(n[a[1]]=e(t))})),q(a,n)}},n=t.target,s=e(n.tagName)?n:((t,a)=>{let n=t;for(let t=0;t<a;t++){if(e(n.tagName))return n;if(n=n.parentElement,!n)return null}})(n,10);if(!s)return a(n);{const{href:e,target:n}=s,i=s.getAttribute(w);if(i)if("A"===s.tagName){const o="_blank"===n||t.ctrlKey||t.shiftKey||t.metaKey||t.button&&1===t.button;if(i&&e)return o||t.preventDefault(),a(s).then((()=>{o||(r.href=e)}))}else if("BUTTON"===s.tagName)return a(s)}}),!0),j=!0)})(window)}();
